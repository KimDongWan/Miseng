<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="C:\Users\kdw\Desktop\MisengProject\SSM24 Final\Miseng\bin\Debug\Miseng.exe">
   <Modules>
    <Module Name="miseng.exe">
     <Namespaces>
      <Namespace Name="Miseng">
       <Types>
        <Type Name="MainWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReleaseCapture()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'MainWindow.ReleaseCapture()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'MainWindow.ReleaseCapture()' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'MainWindow.SendMessage(IntPtr, uint, IntPtr, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Miseng.View">
       <Types>
        <Type Name="newFileWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReleaseCapture()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'newFileWindow.ReleaseCapture()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'newFileWindow.ReleaseCapture()' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'newFileWindow.SendMessage(IntPtr, uint, IntPtr, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NewProjectWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReleaseCapture()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'NewProjectWindow.ReleaseCapture()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NewProjectWindow.ReleaseCapture()' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'NewProjectWindow.SendMessage(IntPtr, uint, IntPtr, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TutorialWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReleaseCapture()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'TutorialWindow.ReleaseCapture()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'TutorialWindow.ReleaseCapture()' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'TutorialWindow.SendMessage(IntPtr, uint, IntPtr, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Miseng.ViewModel.Script">
       <Types>
        <Type Name="DeleteCache" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DeleteCache_main()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\kdw\Desktop\MisengProject\SSM24 Final\Miseng\ViewModel\Script" File="deleteCache.cs" Line="161">Method 'DeleteCache.DeleteCache_main()' called GetLastWin32Error but the immediately preceding call to 'Marshal.GetLastWin32Error()' is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteUrlCacheEntry(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'DeleteCache.DeleteUrlCacheEntry(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'DeleteCache.DeleteUrlCacheEntry(IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteUrlCacheGroup(System.Int64,System.Int32,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'DeleteCache.DeleteUrlCacheGroup(long, int, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'DeleteCache.DeleteUrlCacheGroup(long, int, IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindFirstUrlCacheEntry(System.String,System.IntPtr,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'DeleteCache.FindFirstUrlCacheEntry(string, IntPtr, ref int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'DeleteCache.FindFirstUrlCacheEntry(string, IntPtr, ref int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpszUrlSearchPattern' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindFirstUrlCacheGroup(System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int64&amp;,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'DeleteCache.FindFirstUrlCacheGroup(int, int, IntPtr, int, ref long, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'DeleteCache.FindFirstUrlCacheGroup(int, int, IntPtr, int, ref long, IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindNextUrlCacheEntry(System.IntPtr,System.IntPtr,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'DeleteCache.FindNextUrlCacheEntry(IntPtr, IntPtr, ref int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'DeleteCache.FindNextUrlCacheEntry(IntPtr, IntPtr, ref int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindNextUrlCacheGroup(System.IntPtr,System.Int64&amp;,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'DeleteCache.FindNextUrlCacheGroup(IntPtr, ref long, IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'DeleteCache.FindNextUrlCacheGroup(IntPtr, ref long, IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DeleteCache+INTERNET_CACHE_ENTRY_INFOA" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CacheEntryType" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA' contains the following non-portable fields: 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.CacheEntryType'.</Issue>
          </Message>
          <Message Id="dwExemptDelta" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA' contains the following non-portable fields: 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.dwExemptDelta'.</Issue>
          </Message>
          <Message Id="dwHeaderInfoSize" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA' contains the following non-portable fields: 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.dwHeaderInfoSize'.</Issue>
          </Message>
          <Message Id="dwReserved" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA' contains the following non-portable fields: 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.dwReserved'.</Issue>
          </Message>
          <Message Id="lpszLocalFileName" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA' contains the following non-portable fields: 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.lpszLocalFileName'.</Issue>
          </Message>
          <Message Id="lpszSourceUrlName" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA' contains the following non-portable fields: 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.lpszSourceUrlName'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#lpHeaderInfo" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.lpHeaderInfo' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpszFileExtension" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.lpszFileExtension' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpszLocalFileName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.lpszLocalFileName' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpszSourceUrlName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2015-10-03 17:59:44Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'DeleteCache.INTERNET_CACHE_ENTRY_INFOA.lpszSourceUrlName' private.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="CallGetLastErrorImmediatelyAfterPInvoke" Category="Microsoft.Interoperability" CheckId="CA1404">
   <Name>Call GetLastError immediately after P/Invoke</Name>
   <Description>The last Win32 error can be reset as a result of making managed calls, due to P/Invokes called by the runtime itself. In order to ensure the correctness of the value returned by GetLastWin32Error, place the call immediately after the relevant platform invoke call in your code.</Description>
   <Resolution Name="Default">Method {0} called GetLastWin32Error but the immediately preceding call to {1} is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182199.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>P/Invokes should not be visible</Name>
   <Description>Interop layer should not be public. The DllImport attribute should not be applied to publicly accessible members (public or protected).</Description>
   <Resolution Name="Default">Change the accessibility of P/Invoke {0} so that it is no longer visible from outside its assembly.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111">
   <Name>Pointers should not be visible</Name>
   <Description>IntPtr and UIntPtr fields should be declared as private. Exposing non-private pointers can cause a security weakness.</Description>
   <Resolution Name="Default">Make {0} private.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182306.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalError</MessageLevel>
   <File Name="securityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Specify marshaling for P/Invoke string arguments</Name>
   <Description>When marshaling strings as ANSI (or as Auto on Win9x), some characters may be changed. If best-fit mapping is on, strings that appear different in Unicode will be marshaled to identical ANSI strings, which may lead to incorrect security decisions. Turning best-fit mapping off reduces this risk, as all characters without equivalents are mapped to '?'. Also, note that CharSet.Ansi is the default setting for all string marshaling; Unicode marshaling must be specified explicitly, either as a CharSet setting of DllImport or StructLayout, or as a MarshalAs attribute with a Unicode (or system-dependent) UnmanagedType.</Description>
   <Resolution Name="Parameter">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900">
   <Name>Value type fields should be portable</Name>
   <Description>Structures with explicit layout containing misaligned fields cause crashes on 64-bit platforms.</Description>
   <Resolution Name="Default">Structure {0} contains the following non-portable fields: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182285(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="portabilityrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
